import React, { useEffect, useState } from 'react'
import Head from 'next/head'
import Navbar from '../../components/Navbar/Navbar'
import Footer from '../../components/Footer'
import SellerProfile from '../../components/Seller/SellerProfile'
import { useStateValue } from '../../context/context'
import axios from 'axios'
import actionTypes from '../../context/action-types'
import { useRouter } from 'next/router'
import { ToastContainer, toast } from 'react-toastify'
import 'react-toastify/dist/ReactToastify.css'
import url from '../../data'

const discover = () => {
  const token: String | null = localStorage.getItem('auth_pass')
  const [{ profile }, dispatch] = useStateValue()
  const [userProfile, setUserProfile] = useState({})
  const { query } = useRouter()

  const router = useRouter()

  console.log('profileee', profile)
  useEffect(() => {
    query?.user === profile?._id ? router.push('/profile') : null
  }, [query?.user, profile?._id])

  // useEffect(() => {
  //   if (token) {
  //     axios
  //       .get(`${url}/user/profile`, {
  //         headers: {
  //           Authorization: token,
  //         },
  //       })
  //       .then((response) => {
  //         dispatch({
  //           type: actionTypes.SET_PROFILE,
  //           payload: response?.data?.data[0],
  //         })
  //       })
  //   }
  // }, [token])

  useEffect(() => {
    axios.get(`${url}/user/getUserDetails/${query.user}`).then((response) => {
      setUserProfile(response?.data?.data?.data)
      console.log(response?.data?.data?.data)
    })
  }, [query.user])

  return (
    <>
      <Head>
        <title>Epiko NFT Marketplace</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="favicon.svg" />
      </Head>
      <Navbar />
      <SellerProfile userProfile={userProfile} />
      <ToastContainer
        position="top-center"
        autoClose={5000}
        hideProgressBar={false}
        newestOnTop={false}
        closeOnClick
        rtl={false}
        pauseOnFocusLoss
        draggable
        pauseOnHover
      />
      <Footer />
    </>
  )
}

export default discover
